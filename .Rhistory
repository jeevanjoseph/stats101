Contract+
PaperlessBilling+
PaymentMethod+
Tenure+
MonthlyCharges+
TotalCharges , family = binomial(link = "logit"),data = trainingSet)
summary(model)
model_refined<-glm(Attrition~MultipleLines+
SeniorCitizen+
InternetService+
OnlineSecurity+
TechSupport+
Contract+
StreamingTV+
PaperlessBilling+
PaymentMethod+
TotalCharges+
Tenure , family = binomial(link = "logit"),data = trainingSet)
summary(model_refined)
## Predict values with logistic regression. threshold = 0.5.
predictions<-ifelse(predict(model,testSet,type="response")>0.5,"Yes","No")
## Convert to a factor.
predictions<-factor(predictions,labels = c("No","Yes"))
summary(predictions)
## Predict values with logistic regression. threshold = 0.5.
predictions1<-ifelse(predict(model_refined,testSet,type="response")>0.5,"Yes","No")
## Convert to a factor.
predictions1<-factor(predictions1,labels = c("No","Yes"))
summary(predictions1)
comparison<-data.frame(predictions,predictions1,testSet$Churn)
summary(comparison)
data$Attrition<- ifelse(data$Churn=="Yes",1,0)
sample<-sample.split(data$Attrition,SplitRatio=.90)
trainingSet <- data[sample,]
testSet <- data[!sample,]
model<-glm(Attrition~gender+
SeniorCitizen+
Partner+
Dependents+
MultipleLines+
InternetService+
OnlineSecurity+
OnlineBackup+
DeviceProtection+
TechSupport+
StreamingTV+
StreamingMovies+
Contract+
PaperlessBilling+
PaymentMethod+
Tenure+
MonthlyCharges+
TotalCharges , family = binomial(link = "logit"),data = trainingSet)
summary(model)
model_refined<-glm(Attrition~MultipleLines+
SeniorCitizen+
InternetService+
OnlineSecurity+
TechSupport+
Contract+
StreamingTV+
PaperlessBilling+
PaymentMethod+
TotalCharges+
Tenure , family = binomial(link = "logit"),data = trainingSet)
summary(model_refined)
## Predict values with logistic regression. threshold = 0.5.
predictions<-ifelse(predict(model,testSet,type="response")>0.5,"Yes","No")
## Convert to a factor.
predictions<-factor(predictions,labels = c("No","Yes"))
summary(predictions)
## Predict values with logistic regression. threshold = 0.5.
predictions1<-ifelse(predict(model_refined,testSet,type="response")>0.5,"Yes","No")
## Convert to a factor.
predictions1<-factor(predictions1,labels = c("No","Yes"))
summary(predictions1)
comparison<-data.frame(predictions,predictions1,testSet$Churn)
summary(comparison)
data$Attrition<- ifelse(data$Churn=="Yes",1,0)
sample<-sample.split(data$Attrition,SplitRatio=.90)
trainingSet <- data[sample,]
testSet <- data[!sample,]
model<-glm(Attrition~gender+
SeniorCitizen+
Partner+
Dependents+
MultipleLines+
InternetService+
OnlineSecurity+
OnlineBackup+
DeviceProtection+
TechSupport+
StreamingTV+
StreamingMovies+
Contract+
PaperlessBilling+
PaymentMethod+
Tenure+
MonthlyCharges+
TotalCharges , family = binomial(link = "logit"),data = trainingSet)
summary(model)
model_refined<-glm(Attrition~MultipleLines+
SeniorCitizen+
InternetService+
OnlineSecurity+
TechSupport+
Contract+
StreamingTV+
PaperlessBilling+
PaymentMethod+
TotalCharges+
Tenure , family = binomial(link = "logit"),data = trainingSet)
summary(model_refined)
## Predict values with logistic regression. threshold = 0.5.
predictions<-ifelse(predict(model,testSet,type="response")>0.5,"Yes","No")
## Convert to a factor.
predictions<-factor(predictions,labels = c("No","Yes"))
summary(predictions)
## Predict values with logistic regression. threshold = 0.5.
predictions1<-ifelse(predict(model_refined,testSet,type="response")>0.5,"Yes","No")
## Convert to a factor.
predictions1<-factor(predictions1,labels = c("No","Yes"))
summary(predictions1)
comparison<-data.frame(predictions,predictions1,testSet$Churn)
summary(comparison)
data$Attrition<- ifelse(data$Churn=="Yes",1,0)
sample<-sample.split(data$Attrition,SplitRatio=.90)
trainingSet <- data[sample,]
testSet <- data[!sample,]
model<-glm(Attrition~gender+
SeniorCitizen+
Partner+
Dependents+
MultipleLines+
InternetService+
OnlineSecurity+
OnlineBackup+
DeviceProtection+
TechSupport+
StreamingTV+
StreamingMovies+
Contract+
PaperlessBilling+
PaymentMethod+
Tenure+
MonthlyCharges+
TotalCharges , family = binomial(link = "logit"),data = trainingSet)
summary(model)
model_refined<-glm(Attrition~MultipleLines+
SeniorCitizen+
InternetService+
OnlineSecurity+
TechSupport+
Contract+
StreamingTV+
PaperlessBilling+
PaymentMethod+
TotalCharges+
Tenure , family = binomial(link = "logit"),data = trainingSet)
summary(model_refined)
## Predict values with logistic regression. threshold = 0.5.
predictions<-ifelse(predict(model,testSet,type="response")>0.5,"Yes","No")
## Convert to a factor.
predictions<-factor(predictions,labels = c("No","Yes"))
summary(predictions)
## Predict values with logistic regression. threshold = 0.5.
predictions1<-ifelse(predict(model_refined,testSet,type="response")>0.5,"Yes","No")
## Convert to a factor.
predictions1<-factor(predictions1,labels = c("No","Yes"))
summary(predictions1)
comparison<-data.frame(predictions,predictions1,testSet$Churn)
summary(comparison)
data$Attrition<- ifelse(data$Churn=="Yes",1,0)
sample<-sample.split(data$Attrition,SplitRatio=.90)
trainingSet <- data[sample,]
testSet <- data[!sample,]
model<-glm(Attrition~gender+
SeniorCitizen+
Partner+
Dependents+
MultipleLines+
InternetService+
OnlineSecurity+
OnlineBackup+
DeviceProtection+
TechSupport+
StreamingTV+
StreamingMovies+
Contract+
PaperlessBilling+
PaymentMethod+
Tenure+
MonthlyCharges+
TotalCharges , family = binomial(link = "logit"),data = trainingSet)
summary(model)
model_refined<-glm(Attrition~MultipleLines+
SeniorCitizen+
InternetService+
OnlineSecurity+
TechSupport+
Contract+
StreamingTV+
PaperlessBilling+
PaymentMethod+
TotalCharges+
Tenure , family = binomial(link = "logit"),data = trainingSet)
summary(model_refined)
## Predict values with logistic regression. threshold = 0.5.
predictions<-ifelse(predict(model,testSet,type="response")>0.5,"Yes","No")
## Convert to a factor.
predictions<-factor(predictions,labels = c("No","Yes"))
summary(predictions)
## Predict values with logistic regression. threshold = 0.5.
predictions1<-ifelse(predict(model_refined,testSet,type="response")>0.5,"Yes","No")
## Convert to a factor.
predictions1<-factor(predictions1,labels = c("No","Yes"))
summary(predictions1)
comparison<-data.frame(predictions,predictions1,testSet$Churn)
summary(comparison)
data$Attrition<- ifelse(data$Churn=="Yes",1,0)
sample<-sample.split(data$Attrition,SplitRatio=.90)
trainingSet <- data[sample,]
testSet <- data[!sample,]
model<-glm(Attrition~gender+
SeniorCitizen+
Partner+
Dependents+
MultipleLines+
InternetService+
OnlineSecurity+
OnlineBackup+
DeviceProtection+
TechSupport+
StreamingTV+
StreamingMovies+
Contract+
PaperlessBilling+
PaymentMethod+
Tenure+
MonthlyCharges+
TotalCharges , family = binomial(link = "logit"),data = trainingSet)
summary(model)
model_refined<-glm(Attrition~MultipleLines+
SeniorCitizen+
InternetService+
OnlineSecurity+
TechSupport+
Contract+
StreamingTV+
PaperlessBilling+
PaymentMethod+
TotalCharges+
Tenure , family = binomial(link = "logit"),data = trainingSet)
summary(model_refined)
## Predict values with logistic regression. threshold = 0.5.
predictions<-ifelse(predict(model,testSet,type="response")>0.5,"Yes","No")
## Convert to a factor.
predictions<-factor(predictions,labels = c("No","Yes"))
summary(predictions)
## Predict values with logistic regression. threshold = 0.5.
predictions1<-ifelse(predict(model_refined,testSet,type="response")>0.5,"Yes","No")
## Convert to a factor.
predictions1<-factor(predictions1,labels = c("No","Yes"))
summary(predictions1)
comparison<-data.frame(predictions,predictions1,testSet$Churn)
summary(comparison)
data$Attrition<- ifelse(data$Churn=="Yes",1,0)
sample<-sample.split(data$Attrition,SplitRatio=.90)
trainingSet <- data[sample,]
testSet <- data[!sample,]
model<-glm(Attrition~gender+
SeniorCitizen+
Partner+
Dependents+
MultipleLines+
InternetService+
OnlineSecurity+
OnlineBackup+
DeviceProtection+
TechSupport+
StreamingTV+
StreamingMovies+
Contract+
PaperlessBilling+
PaymentMethod+
Tenure+
MonthlyCharges+
TotalCharges , family = binomial(link = "logit"),data = trainingSet)
summary(model)
model_refined<-glm(Attrition~MultipleLines+
SeniorCitizen+
InternetService+
OnlineSecurity+
TechSupport+
Contract+
StreamingTV+
PaperlessBilling+
PaymentMethod+
TotalCharges+
Tenure , family = binomial(link = "logit"),data = trainingSet)
summary(model_refined)
## Predict values with logistic regression. threshold = 0.5.
predictions<-ifelse(predict(model,testSet,type="response")>0.5,"Yes","No")
## Convert to a factor.
predictions<-factor(predictions,labels = c("No","Yes"))
summary(predictions)
## Predict values with logistic regression. threshold = 0.5.
predictions1<-ifelse(predict(model_refined,testSet,type="response")>0.5,"Yes","No")
## Convert to a factor.
predictions1<-factor(predictions1,labels = c("No","Yes"))
summary(predictions1)
comparison<-data.frame(predictions,predictions1,testSet$Churn)
summary(comparison)
data$Attrition<- ifelse(data$Churn=="Yes",1,0)
sample<-sample.split(data$Attrition,SplitRatio=.90)
trainingSet <- data[sample,]
testSet <- data[!sample,]
model<-glm(Attrition~gender+
SeniorCitizen+
Partner+
Dependents+
MultipleLines+
InternetService+
OnlineSecurity+
OnlineBackup+
DeviceProtection+
TechSupport+
StreamingTV+
StreamingMovies+
Contract+
PaperlessBilling+
PaymentMethod+
Tenure+
MonthlyCharges+
TotalCharges , family = binomial(link = "logit"),data = trainingSet)
summary(model)
model_refined<-glm(Attrition~MultipleLines+
SeniorCitizen+
InternetService+
OnlineSecurity+
TechSupport+
Contract+
StreamingTV+
PaperlessBilling+
PaymentMethod+
TotalCharges+
Tenure , family = binomial(link = "logit"),data = trainingSet)
summary(model_refined)
## Predict values with logistic regression. threshold = 0.5.
predictions<-ifelse(predict(model,testSet,type="response")>0.5,"Yes","No")
## Convert to a factor.
predictions<-factor(predictions,labels = c("No","Yes"))
summary(predictions)
## Predict values with logistic regression. threshold = 0.5.
predictions1<-ifelse(predict(model_refined,testSet,type="response")>0.5,"Yes","No")
## Convert to a factor.
predictions1<-factor(predictions1,labels = c("No","Yes"))
summary(predictions1)
comparison<-data.frame(predictions,predictions1,testSet$Churn)
summary(comparison)
model_refined<-glm(Attrition~MultipleLines+
SeniorCitizen+
InternetService+
OnlineSecurity+
TechSupport+
Contract+
StreamingTV+
StreamingMovies+
PaperlessBilling+
PaymentMethod+
TotalCharges+
Tenure , family = binomial(link = "logit"),data = trainingSet)
summary(model_refined)
## Predict values with logistic regression. threshold = 0.5.
predictions<-ifelse(predict(model,testSet,type="response")>0.5,"Yes","No")
## Convert to a factor.
predictions<-factor(predictions,labels = c("No","Yes"))
summary(predictions)
## Predict values with logistic regression. threshold = 0.5.
predictions1<-ifelse(predict(model_refined,testSet,type="response")>0.5,"Yes","No")
## Convert to a factor.
predictions1<-factor(predictions1,labels = c("No","Yes"))
summary(predictions1)
comparison<-data.frame(predictions,predictions1,testSet$Churn)
summary(comparison)
155/170
model<-glm(Attrition~gender+
SeniorCitizen+
Partner+
Dependents+
MultipleLines+
InternetService+
OnlineSecurity+
OnlineBackup+
DeviceProtection+
TechSupport+
StreamingTV+
StreamingMovies+
Contract+
PaperlessBilling+
PaymentMethod+
Tenure+
MonthlyCharges+
TotalCharges , family = binomial(link = "logit"),data = trainingSet)
summary(model)
model<-glm(Attrition~gender+
SeniorCitizen+
Partner+
Dependents+
MultipleLines+
InternetService+
OnlineSecurity+
OnlineBackup+
DeviceProtection+
TechSupport+
StreamingTV+
StreamingMovies+
Contract+
PaperlessBilling+
PaymentMethod+
Tenure+
MonthlyCharges+
TotalCharges , family = binomial(link = "logit"),data = trainingSet)
summary(model)
model_refined<-glm(Attrition~MultipleLines+
SeniorCitizen+
InternetService+
OnlineSecurity+
TechSupport+
Contract+
StreamingTV+
StreamingMovies+
PaperlessBilling+
PaymentMethod+
TotalCharges+
Tenure , family = binomial(link = "logit"),data = trainingSet)
summary(model_refined)
## Predict values with logistic regression. threshold = 0.5.
predictions<-ifelse(predict(model,testSet,type="response")>0.5,"Yes","No")
## Convert to a factor.
predictions<-factor(predictions,labels = c("No","Yes"))
summary(predictions)
## Predict values with logistic regression. threshold = 0.5.
predictions1<-ifelse(predict(model_refined,testSet,type="response")>0.5,"Yes","No")
## Convert to a factor.
predictions1<-factor(predictions1,labels = c("No","Yes"))
summary(predictions1)
comparison<-data.frame(predictions,predictions1,testSet$Churn)
summary(comparison)
155/170
# Logistic Regression Model
model<-glm(Attrition~gender+
SeniorCitizen+
Partner+
Dependents+
MultipleLines+
InternetService+
OnlineSecurity+
OnlineBackup+
DeviceProtection+
TechSupport+
StreamingTV+
StreamingMovies+
Contract+
PaperlessBilling+
PaymentMethod+
Tenure+
MonthlyCharges+
TotalCharges , family = binomial(link = "logit"),data = trainingSet)
# Logistic Regression Model
model<-glm(Attrition~gender+SeniorCitizen+Partner+Dependents+MultipleLines+
InternetService+OnlineSecurity+OnlineBackup+DeviceProtection+
TechSupport+StreamingTV+StreamingMovies+Contract+PaperlessBilling+
PaymentMethod+Tenure+MonthlyCharges+
TotalCharges , family = binomial(link = "logit"),data = trainingSet)
summary(model)
pchisq(6644.7-4646.8,5724-5697)
1-pchisq(6644.7-4646.8,5724-5697)
1-pchisq(6644.7,5724)
model_refined<-glm(Attrition~MultipleLines+SeniorCitizen+InternetService+
OnlineSecurity+TechSupport+ Contract+StreamingTV+
StreamingMovies+PaperlessBilling+PaymentMethod+TotalCharges+
Tenure , family = binomial(link = "logit"),data = trainingSet)
summary(model_refined)
## Predict values with logistic regression. threshold = 0.5.
predictions_refined<-ifelse(predict(model_refined,testSet,type="response")>0.5,"Yes","No")
## Convert to a factor.
predictions_refined<-factor(predictions_refined,labels = c("No","Yes"))
summary(predictions_refined)
comparison<-data.frame(predictions_refined,testSet$Churn)
summary(comparison)
## Predict values with logistic regression. threshold = 0.5.
predictions_refined<-ifelse(predict(model_refined,testSet,type="response")>=0.5,"Yes","No")
## Convert to a factor.
predictions_refined<-factor(predictions_refined,labels = c("No","Yes"))
summary(predictions_refined)
comparison<-data.frame(predictions_refined,testSet$Churn)
summary(comparison)
## Predict values with logistic regression. threshold = 0.5.
predictions_refined<-ifelse(predict(model_refined,testSet,type="response")>0.5,"Yes","No")
## Convert to a factor.
predictions_refined<-factor(predictions_refined,labels = c("No","Yes"))
summary(predictions_refined)
comparison<-data.frame(predictions_refined,testSet$Churn)
summary(comparison)
155/170
roc.curve
install.packages("ROSE")
install.packages("ROSE")
install.packages("ROSE")
install.packages("ROSE")
install.packages("ROSE")
